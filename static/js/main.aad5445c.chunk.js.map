{"version":3,"sources":["components/PhoneBook/phonebook.module.css","components/Contacts/contacts.module.css","components/Filter/filter.module.css","components/Container/container.module.css","redux/actions.js","redux/reducer.js","redux/auth/auth-operations.js","redux/auth/auth-slice.js","redux/store.js","components/Container/container.js","redux/auth/auth-selectors.js","components/PrivateRoute.js","components/PublicRoute.js","components/Navigation.js","components/UserMenu/default-avatar.png","components/UserMenu/UserMenu.js","components/AuthNav.js","components/AppBar.js","redux/contacts-selectors.js","components/PhoneBook/phoneBook.js","components/Contacts/contacts.js","components/Filter/filter.js","views/HomeView.js","views/RegisterView.js","views/LoginView.js","App.js","index.js"],"names":["module","exports","axios","defaults","baseURL","createContact","createAsyncThunk","contact","a","post","result","console","log","data","getContacts","get","deleteContacts","id","delete","contactsSlice","createSlice","name","initialState","items","loader","error","filter","reducers","filterContact","state","action","payload","deleteFilteredContact","extraReducers","pending","rejected","fulfilled","meta","arg","actions","token","headers","common","Authorization","register","credentials","logIn","authOperations","logOut","fetchCurrentUser","_","thunkAPI","getState","persistedToken","auth","rejectWithValue","authSlice","user","email","isLoggedIn","isFetchingCurrentUser","authPersistConfig","key","storage","whitelist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","persistReducer","contacts","devTools","process","persistor","persistStore","Container","children","className","s","container","authSelectors","PrivateRoute","redirectTo","routeProps","useSelector","to","PublicRoute","restricted","shouldRedirect","styles","link","display","textDecoration","padding","fontWeight","color","activeLink","Navigation","exact","style","activeStyle","alignItems","avatar","marginRight","UserMenu","dispatch","useDispatch","defaultAvatar","src","alt","width","type","onClick","AuthNav","header","justifyContent","borderBottom","AppBar","getVisibleContacts","value","normalizedFilter","toLowerCase","cont","includes","Phonebook","useState","setName","number","setNumber","handleChange","e","target","phonebook","formPhoneBook","onSubmit","preventDefault","find","alert","uuidv4","onChange","pattern","title","required","phoneBookButton","search","Contacts","filterIsArray","Array","isArray","length","contactListformat","contactList","map","contactItem__btn","handleDeleteContact","Filter","filterState","forFilterState","findcontacts","findInput","filterCont","minHeight","fontSize","textAlign","HomeView","role","form","label","flexDirection","marginBottom","RegisterView","setEmail","password","setPassword","autoComplete","LoginView","App","useEffect","fallback","path","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.aad5445c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"phoneBookButton\":\"phonebook_phoneBookButton__2pqfD\",\"formPhoneBook\":\"phonebook_formPhoneBook__GhRuZ\",\"phonebook\":\"phonebook_phonebook__erCQK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem__btn\":\"contacts_contactItem__btn__2dpMA\",\"contactList\":\"contacts_contactList__2P6pN\",\"contactListformat\":\"contacts_contactListformat__3cFkX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"findcontacts\":\"filter_findcontacts__3xnPs\",\"findInput\":\"filter_findInput__1Uk2-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_container__2G6Zm\"};","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\n\nexport const createContact = createAsyncThunk(\n  'contacts/createContact',\n  async contact => {\n    const result = await axios.post('/contacts', contact);\n    console.log(result);\n    console.log(result.data);\n    return result.data;\n  },\n);\n\n/* \nexport const getContacts = () => async (dispatch) => {\n  dispatch(actions.fatchContactRequest())\n  try {\n    const { data } = await axios.get('/contacts')\n    dispatch(actions.fatchContactSuccess(data))\n  } catch (error) {\n    dispatch(actions.fatchContactError(error.message))\n  } */\n\n /*  export const getTodos = createAsyncThunk(\"todos/getTodos\", async () => {\n    const result = await axios.get(\"http://localhost:7777/tasks\");\n    return result.data;\n  }); */\n\n\n\nexport const getContacts = createAsyncThunk(\n  'contacts/getContacts',\n  async () => {\n    const result = await axios.get('/contacts');\n    console.log(result);\n    console.log(1, result.data);\n    return result.data;\n  },\n);\nexport const deleteContacts = createAsyncThunk(\n  'contacts/deleteContacts',\n  async id => {\n    const result = await axios.delete(`/contacts/${id}`);\n    return result.data;\n  },\n);\n\n","import { createSlice } from '@reduxjs/toolkit';\nimport { deleteContacts, createContact, getContacts } from './actions';\n\nconst initialState = {\n  items: [],\n  loader: false,\n  error: '',\n  filter: '',\n};\n\nconst contactsSlice = createSlice({\n  name: 'contacts',\n  initialState,\n  reducers: {\n    filterContact(state, action) {\n      return { ...state, filter: action.payload };\n    },\n    deleteFilteredContact(state, action) {\n      return {\n        ...state,\n        filter: [...state.filter.filter(state => state.id !== action.payload)],\n      };\n    },\n  },\n\n  extraReducers: {\n    [deleteContacts.pending]: state => {\n      state.loader = true;\n    },\n    [deleteContacts.rejected]: state => {\n      state.loader = false;\n      state.error = 'Error';\n    },\n    [deleteContacts.fulfilled]: (state, action) => {\n      state.loader = false;\n      state.error = '';\n      state.items = state.items.filter(state => state.id !== action.meta.arg);\n    },\n    [createContact.pending]: (state, action) => {\n      state.loader = true;\n    },\n    [createContact.rejected]: (state, action) => {\n      state.loader = false;\n      state.error = 'Error';\n    },\n    [createContact.fulfilled]: (state, action) => {\n      state.loader = false;\n      state.error = '';\n      state.items = [...state.items, action.payload];\n    },\n    [getContacts.pending]: state => {\n      state.loader = true;\n    },\n    [getContacts.rejected]: state => {\n      state.loader = false;\n      state.error = 'Error';\n    },\n    [getContacts.fulfilled]: (state, { payload }) => {\n      state.loader = false;\n      state.error = '';\n      state.items = [...state.items, ...payload];\n    },\n  },\n});\n\nexport const { filterContact, deleteFilteredContact } = contactsSlice.actions;\nexport default contactsSlice.reducer;\n","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\n/*\n * POST @ /users/signup\n * body: { name, email, password }\n * После успешной регистрации добавляем токен в HTTP-заголовок\n */\nconst register = createAsyncThunk('auth/register', async credentials => {\n  try {\n    const { data } = await axios.post('/users/signup', credentials);\n    token.set(data.token);\n    console.log(data);\n    return data;\n  } catch (error) {\n    console.log('error', error);\n    // TODO: Добавить обработку ошибки error.message\n  }\n});\n\n/*\n * POST @ /users/login\n * body: { email, password }\n * После успешного логина добавляем токен в HTTP-заголовок\n */\nconst logIn = createAsyncThunk('auth/login', async credentials => {\n  try {\n    const { data } = await axios.post('/users/login', credentials)\n    token.set(data.token)\n    return data;\n  } catch (error) {\n    \n    //return error;\n    // TODO: Добавить обработку ошибки error.message\n  }\n});\n\n\n\n\n\n\n\n/*\n * POST @ /users/logout\n * headers: Authorization: Bearer token\n * После успешного логаута, удаляем токен из HTTP-заголовка\n */\nconst logOut = createAsyncThunk('auth/logout', async () => {\n  try {\n    await axios.post('/users/logout');\n    token.unset();\n  } catch (error) {\n    // TODO: Добавить обработку ошибки error.message\n  }\n});\n/*\n * GET @ /users/current\n * headers:\n *    Authorization: Bearer token\n *\n * 1. Забираем токен из стейта через getState()\n * 2. Если токена нет, выходим не выполняя никаких операций\n * 3. Если токен есть, добавляет его в HTTP-заголовок и выполянем операцию\n */\nconst fetchCurrentUser = createAsyncThunk(\n  'auth/refresh',\n  async (_, thunkAPI) => {\n    const state = thunkAPI.getState();\n    const persistedToken = state.auth.token;\n\n    if (persistedToken === null) {\n      console.log('Токена нет, уходим из fetchCurrentUser');\n      return thunkAPI.rejectWithValue();\n    }\n\n    token.set(persistedToken);\n    try {\n      const { data } = await axios.get('/users/current');\n      console.log(`data`, data)\n      \n      return data;\n    } catch (error) {\n      // TODO: Добавить обработку ошибки error.message\n    }\n  },\n);\n\nexport const authOperations = {\n  register,\n  logOut,\n  logIn,\n  fetchCurrentUser,\n};\n","import { createSlice } from '@reduxjs/toolkit';\nimport {authOperations} from './auth-operations';\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n  isFetchingCurrentUser: false,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  extraReducers: {\n    [authOperations.register.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logIn.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n/*     [authOperations.logIn.rejected](state, action) {\n      /* state.user = action.payload.user;\n      state.token = action.payload.token; \n      state.isLoggedIn = false;\n    }, */\n    [authOperations.logOut.fulfilled](state) {\n      state.user = { name: null, email: null };\n      state.token = null;\n      state.isLoggedIn = false;\n    },\n    [authOperations.fetchCurrentUser.pending](state) {\n      state.isFetchingCurrentUser = true\n    },\n    [authOperations.fetchCurrentUser.fulfilled](state, action) {\n      state.user = action.payload;\n      state.isLoggedIn = true;\n      state.isFetchingCurrentUser = false\n    },\n    [authOperations.fetchCurrentUser.rejected](state) {\n      state.isFetchingCurrentUser = false\n    },\n  },\n});\n\nexport default authSlice.reducer;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger'\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist'; \nimport contactsSlice from './reducer';\nimport authSlice from './auth/auth-slice'\nimport storage from 'redux-persist/lib/storage';\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\n/* const rootReducer = {\n  contacts: contactsSlice,\n  auth: persistReducer(authPersistConfig, authSlice),\n}; */\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n]\n\nexport const store = configureStore({\n  /* reducer: rootReducer, */\n  reducer: {\n    auth: persistReducer(authPersistConfig, authSlice),\n    contacts: contactsSlice,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\n\n/* export const store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n    // auth: authReducer\n    auth: persistReducer(authPersistConfig, authReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n})\n */\n\n\n/* import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';*/\n\n\n/* import { authReducer } from './auth'; */\n\n\n\n/* export const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authSlice),\n    todos: todosReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n}); */\n\nexport const persistor = persistStore(store);","  \r\nimport s from './container.module.css';\r\n\r\nexport default function Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}","const getIsLoggedIn = state => state.auth.isLoggedIn;\n\nconst getUsername = state => state.auth.user.name;\n\nconst getIsFetchingCurrent = state => state.auth.isFetchingCurrentUser;\nexport const authSelectors = {\n  getIsLoggedIn,\n  getUsername,\n  getIsFetchingCurrent,\n\n};","import { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport  {authSelectors}  from '../redux/auth/auth-selectors';\n\n/**\n * 1. Он должен повторять API Route\n *  2. Он должен рендерить Route\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\n * - В противном случае рендерит Redirect на redirectTo\n */\n\nexport default function PrivateRoute({\n  children,\n  redirectTo = '/',\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <Route {...routeProps}>\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\n    </Route>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport  {authSelectors}  from '../redux/auth/auth-selectors';\n\n/**\n * - Если маршрут ограниченный, и юзер залогинен, рендерит редирект на redirectTo\n * - В противном случае рендерит компонент\n *\n */\n\nexport default function PublicRoute({\n  children,\n  restricted = false,\n  redirectTo = '/',\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  const shouldRedirect = isLoggedIn && restricted;\n  return (\n    <Route {...routeProps}>\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\n    </Route>\n  );\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontWeight: 700,\n    color: '#2A363B',\n  },\n  activeLink: {\n    color: '#E84A5F',\n  },\n};\n\nconst Navigation = () => (\n  <nav>\n    <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\n      Главная\n    </NavLink>\n\n    <NavLink\n      to=\"/contacts\"\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      Телефонная книга\n    </NavLink>\n  </nav>\n);\n\nexport default Navigation;\n","export default __webpack_public_path__ + \"static/media/default-avatar.e44fc4e2.png\";","import { useDispatch, useSelector } from 'react-redux';\nimport { authOperations } from '../../redux/auth/auth-operations';\nimport { authSelectors } from '../../redux/auth/auth-selectors';\nimport defaultAvatar from './default-avatar.png';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  avatar: {\n    marginRight: 4,\n  },\n  name: {\n    fontWeight: 700,\n    marginRight: 12,\n  },\n};\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const name = useSelector(authSelectors.getUsername);\n  const avatar = defaultAvatar;\n\n  return (\n    <div style={styles.container}>\n      <img src={avatar} alt=\"\" width=\"32\" style={styles.avatar} />\n      <span style={styles.name}>Добро пожаловать, {name}</span>\n      <button type=\"button\" onClick={() => dispatch(authOperations.logOut())}>\n        Выйти\n      </button>\n    </div>\n  );\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontWeight: 700,\n    color: '#2A363B',\n  },\n  activeLink: {\n    color: '#E84A5F',\n  },\n};\n\nexport default function AuthNav() {\n  return (\n    <div>\n      <NavLink\n        to=\"/register\"\n        exact\n        style={styles.link}\n        activeStyle={styles.activeLink}\n      >\n        Регистрация\n      </NavLink>\n      <NavLink\n        to=\"/login\"\n        exact\n        style={styles.link}\n        activeStyle={styles.activeLink}\n      >\n        Логин\n      </NavLink>\n    </div>\n  );\n}\n","import { useSelector } from 'react-redux';\r\nimport Navigation from './Navigation'; \r\nimport UserMenu from './UserMenu';\r\nimport AuthNav from './AuthNav'; \r\nimport  {authSelectors}  from '../redux/auth/auth-selectors';\r\n\r\nconst styles = {\r\n  header: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    borderBottom: '1px solid #2A363B',\r\n  },\r\n};\r\n\r\nexport default function AppBar() {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <header style={styles.header}>\r\n      <Navigation />\r\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n    </header>\r\n  );\r\n}","export const getVisibleContacts = (state, value) => {\n  if (value) {\n    const normalizedFilter = value.toLowerCase();\n    return state.filter(cont =>\n      cont.name.toLowerCase().includes(normalizedFilter),\n    );\n  }\n  return state.contacts;\n};\n\nexport const contacts = state => getVisibleContacts(state);\nexport const forFilterState = state => state.contacts.items;\n","import { React, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createContact } from '../../redux/actions';\nimport { contacts } from '../../redux/contacts-selectors';\n\nimport s from './phonebook.module.css';\n\nconst Phonebook = () => {\n  const dispatch = useDispatch();\n  const state = useSelector(state => contacts(state));\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const { items } = state;\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const result = items.find(state => name === state.name);\n    if (result) {\n      alert(name + ` is already in contact`);\n    } else {\n      dispatch(createContact({ name, number, id: uuidv4() }));\n    }\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div className={s.phonebook}>\n      <h2>Phonebook</h2>\n      <div className={s.formPhoneBook}>\n        <p>Name</p>\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            onChange={handleChange}\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n          <p>Number</p>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            onChange={handleChange}\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n          <button type=\"submit\" className={s.phoneBookButton}>\n            Add contact\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\nexport default Phonebook;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { deleteContacts } from '../../redux/actions';\nimport { deleteFilteredContact } from '../../redux/reducer';\nimport { contacts } from '../../redux/contacts-selectors';\n\nimport s from './contacts.module.css';\nlet search = '';\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const state = useSelector(state => contacts(state));\n  const filterIsArray = Array.isArray(state.filter);\n\n  if (state.items) {\n    search = state.items;\n  }\n  if (filterIsArray) {\n    search = state.filter;\n  }\n\n  const handleDeleteContact = id => {\n    if (filterIsArray) {\n      dispatch(deleteFilteredContact(id));\n    }\n    dispatch(deleteContacts(id));\n  };\n\n  return (\n    <>\n      {state.loader && <h2>Идет загрузка</h2>}\n      {state.error && <h2>Ошибка загрузки</h2>}\n\n      {search.length > 0 && (\n        <div className={s.contactListformat}>\n          <ul className={s.contactList}>\n            {search.map(({ id, name, number }) => (\n              <li key={id}>\n                {name}: {}\n                {number}\n                <button\n                  type=\"button\"\n                  className={s.contactItem__btn}\n                  onClick={() => handleDeleteContact(id)}\n                >\n                  Удалить\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </>\n  );\n};\nexport default Contacts;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { filterContact } from '../../redux/reducer';\nimport { getVisibleContacts } from '../../redux/contacts-selectors';\nimport { forFilterState } from '../../redux/contacts-selectors';\n\nimport PropTypes from 'prop-types';\nimport s from './filter.module.css';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filterState = useSelector(state => forFilterState(state));\n\n  const handleChange = e => {\n    const { value } = e.target;\n    const filterCont = getVisibleContacts(filterState, value);\n    dispatch(filterContact(filterCont));\n  };\n\n  return (\n    <>\n      <h2>Contacts</h2>\n      <label className={s.findcontacts}>\n        Find contacts by name\n        <input\n          className={s.findInput}\n          type=\"text\"\n          name=\"filter\"\n          onChange={handleChange}\n        />\n      </label>\n    </>\n  );\n};\n\nexport default Filter;\nFilter.propTypes = {\n  value: PropTypes.string,\n  handleChange: PropTypes.func,\n};\n","import React from 'react';\n\nconst styles = {\n  container: {\n    minHeight: 'calc(100vh - 50px)',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontWeight: 500,\n    fontSize: 48,\n    textAlign: 'center',\n  },\n};\n\nconst HomeView = () => (\n  <div style={styles.container}>\n    <h1 style={styles.title}>\n      Приветственная страница нашего сервиса{' '}\n      <span role=\"img\" aria-label=\"Иконка приветствия\">\n        💁‍♀️\n      </span>\n    </h1>\n  </div>\n);\n\nexport default HomeView;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from '../redux/auth/auth-operations';\n\nconst styles = {\n  form: {\n    width: 320,\n  },\n  label: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginBottom: 15,\n  },\n};\n\nexport default function RegisterView() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(authOperations.register({ name, email, password }));\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <div>\n      <h1>Страница регистрации</h1>\n\n      <form onSubmit={handleSubmit} style={styles.form} autoComplete=\"off\">\n        <label style={styles.label}>\n          Имя\n          <input type=\"text\" name=\"name\" value={name} onChange={handleChange} />\n        </label>\n\n        <label style={styles.label}>\n          Почта\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n          />\n        </label>\n\n        <label style={styles.label}>\n          Пароль\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n          />\n        </label>\n\n        <button type=\"submit\">Зарегистрироваться</button>\n      </form>\n    </div>\n  );\n}\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from '../redux/auth/auth-operations';\nimport { getContacts } from '../redux/actions';\nconst styles = {\n  form: {\n    width: 320,\n  },\n  label: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginBottom: 15,\n  },\n};\n\nexport default function LoginView() {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(authOperations.logIn({ email, password }));\n    dispatch(getContacts());\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <div>\n      <h1>Страница логина</h1>\n\n      <form onSubmit={handleSubmit} style={styles.form} autoComplete=\"off\">\n        <label style={styles.label}>\n          Почта\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n          />\n        </label>\n\n        <label style={styles.label}>\n          Пароль\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n          />\n        </label>\n\n        <button type=\"submit\">Войти</button>\n      </form>\n    </div>\n  );\n}\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, Suspense, lazy } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Container from './components/Container/container';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\nimport AppBar from './components/AppBar';\nimport Phonebook from './components/PhoneBook/phoneBook';\nimport Contacts from './components/Contacts/contacts';\nimport Filter from './components/Filter/filter';\nimport { getContacts } from './redux/actions';\n/* import  operations  from '../src/redux/auth/auth-operations'; */\n//++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n/* import TodosView from './views/TodosView';*/\nimport HomeView from './views/HomeView';\nimport RegisterView from './views/RegisterView';\nimport LoginView from './views/LoginView';\nimport  {authSelectors}  from '../src/redux/auth/auth-selectors';\nimport   {authOperations}  from '../src/redux/auth/auth-operations';\nimport './App.css';\n//const Contacts = lazy(() => import('./components/Contacts/contacts'));\n//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n\n\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const isFetchingCurrentUser = useSelector(authSelectors.getIsFetchingCurrent);\n\n  useEffect(() => {\n    dispatch(authOperations.fetchCurrentUser());\n  }, [dispatch]);\n \n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n  \n  return (\n    \n      <Container>\n        {isFetchingCurrentUser ? (\n        <h1>Показываем React Skeleton</h1>\n      ) : (\n\n        <>\n        <AppBar />\n        <Switch>\n            <Suspense fallback={<p>Загружаем...</p>}>\n              <PublicRoute exact path=\"/\">\n                <HomeView />\n              </PublicRoute>\n              <PublicRoute exact path=\"/register\" restricted>\n                <RegisterView />\n              </PublicRoute>\n              <PublicRoute exact path=\"/login\" redirectTo=\"/contacts\" restricted>\n                <LoginView />\n              </PublicRoute>\n              <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\n              <Phonebook />\n              <Filter />\n              <Contacts />\n              </PrivateRoute>\n              \n            </Suspense>\n          </Switch>\n\n\n        {/* <Route exact path=\"/\" component={HomeView} /> */}\n\n        {/* <Route path=\"/register\" component={RegisterView} />\n        <Route path=\"/login\" component={LoginView} /> */}\n        {/* <Route path=\"/todos\" component={TodosView} /> */}\n       \n        </>)}\n\n      </Container>\n    \n  );\n}\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { store, persistor } from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport './index.css';\nimport 'normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);"],"sourceRoot":""}