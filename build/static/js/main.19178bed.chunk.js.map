{"version":3,"sources":["components/PhoneBook/phonebook.module.css","components/Contacts/contacts.module.css","components/Filter/filter.module.css","redux/actions.js","redux/reducer.js","redux/store.js","redux/contacts-selectors.js","components/PhoneBook/phoneBook.js","components/Contacts/contacts.js","components/Filter/filter.js","App.js","index.js"],"names":["module","exports","createContact","createAsyncThunk","contact","a","axios","post","result","data","getContacts","get","deleteContacts","id","delete","contactsSlice","createSlice","name","initialState","items","loader","error","filter","reducers","filterContact","state","action","payload","deleteFilteredContact","extraReducers","pending","rejected","fulfilled","meta","arg","actions","rootReducer","contacts","store","configureStore","reducer","devTools","process","getVisibleContacts","value","normalizedFilter","toLowerCase","cont","includes","Phonebook","dispatch","useDispatch","useSelector","useState","setName","number","setNumber","handleChange","e","target","className","s","phonebook","formPhoneBook","onSubmit","preventDefault","find","alert","uuidv4","type","onChange","pattern","title","required","phoneBookButton","search","Contacts","filterIsArray","Array","isArray","length","contactListformat","contactList","map","contactItem__btn","onClick","handleDeleteContact","Filter","filterState","forFilterState","findcontacts","findInput","filterCont","App","useEffect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.19178bed.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"phoneBookButton\":\"phonebook_phoneBookButton__2Jkda\",\"formPhoneBook\":\"phonebook_formPhoneBook__2gE03\",\"phonebook\":\"phonebook_phonebook__1weBy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem__btn\":\"contacts_contactItem__btn__33bw_\",\"contactList\":\"contacts_contactList__2B8FS\",\"contactListformat\":\"contacts_contactListformat__29zVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"findcontacts\":\"filter_findcontacts__2l5B4\",\"findInput\":\"filter_findInput__iq43i\"};","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nexport const createContact = createAsyncThunk(\n  'contacts/createContact',\n  async contact => {\n    const result = await axios.post('http://localhost:7777/contacts', contact);\n    return result.data;\n  },\n);\n\nexport const getContacts = createAsyncThunk(\n  'contacts/getContacts',\n  async () => {\n    const result = await axios.get('http://localhost:7777/contacts');\n    return result.data;\n  },\n);\n\nexport const deleteContacts = createAsyncThunk(\n  'contacts/deleteContacts',\n  async id => {\n    const result = await axios.delete(`http://localhost:7777/contacts/${id}`);\n    return result.data;\n  },\n);","import { createSlice } from '@reduxjs/toolkit';\nimport {deleteContacts, createContact, getContacts} from './actions'\n\nconst initialState = {\n  items: [],\n  loader: false,\n  error: '',\n  filter: '',\n};\n\nconst contactsSlice = createSlice({\n  name: 'contacts',\n  initialState,\n  reducers: {\n    filterContact(state, action) {\n      return { ...state, filter: action.payload };\n    },\n    deleteFilteredContact(state, action) {\n      return {...state, filter:[...state.filter.filter((state) => state.id !== action.payload)]};\n    },\n  },\n\n  extraReducers: {\n    [deleteContacts.pending]: state => {\n      state.loader = true;\n    },\n    [deleteContacts.rejected]: state => {\n      state.loader = false;\n      state.error = 'Error';\n    },\n    [deleteContacts.fulfilled]: (state, action) => {\n      state.loader = false;\n      state.error = '';\n      state.items = state.items.filter(state => state.id !== action.meta.arg);\n    },\n    [createContact.pending]: (state, action) => {\n      state.loader = true;\n    },\n    [createContact.rejected]: (state, action) => {\n      state.loader = false;\n      state.error = 'Error';\n    },\n    [createContact.fulfilled]: (state, action) => {\n      state.loader = false;\n      state.error = '';\n      state.items = [...state.items, action.payload];\n    },\n    [getContacts.pending]: state => {\n      state.loader = true;\n    },\n    [getContacts.rejected]: state => {\n      state.loader = false;\n      state.error = 'Error';\n    },\n    [getContacts.fulfilled]: (state, { payload }) => {\n      state.loader = false;\n      state.error = '';\n      state.items = [...state.items, ...payload];\n    },\n  },\n});\n\nexport const { filterContact, deleteFilteredContact } = contactsSlice.actions;\nexport default contactsSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport contactsSlice from './reducer';\n\nconst rootReducer = {\n  contacts: contactsSlice,\n};\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  devTools: process.env.NODE_ENV === 'development',\n});\n","\nexport const getVisibleContacts = (state, value) => {\n  if (value) {\n    const normalizedFilter = value.toLowerCase();\n    return state.filter(cont =>\n      cont.name.toLowerCase().includes(normalizedFilter),\n    );\n  }\n  return state.contacts;\n};\n\nexport const contacts = state => getVisibleContacts(state);\nexport const forFilterState = state => state.contacts.items;\n","import { React, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createContact } from '../../redux/actions';\nimport { contacts } from '../../redux/contacts-selectors';\n\nimport s from './phonebook.module.css';\n\nconst Phonebook = () => {\n  const dispatch = useDispatch();\n  const state = useSelector(state => contacts(state));\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const { items } = state;\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const result = items.find(state => name === state.name);\n    if (result) {\n      alert(name + ` is already in contact`);\n    } else {\n      dispatch(createContact({ name, number, id: uuidv4() }));\n    }\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div className={s.phonebook}>\n      <h2>Phonebook</h2>\n      <div className={s.formPhoneBook}>\n        <p>Name</p>\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            onChange={handleChange}\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n          <p>Number</p>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            onChange={handleChange}\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n          <button type=\"submit\" className={s.phoneBookButton}>\n            Add contact\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\nexport default Phonebook;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { deleteContacts } from '../../redux/actions';\nimport {  deleteFilteredContact } from '../../redux/reducer';\nimport { contacts } from '../../redux/contacts-selectors';\n\nimport s from './contacts.module.css';\nlet search = '';\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const state = useSelector(state => contacts(state));\n  const filterIsArray = Array.isArray(state.filter)\n\n  if (state.items) {\n    search = state.items;\n  }\n  if (filterIsArray) {\n    search = state.filter;\n  }\n\n  const handleDeleteContact = id => {\n    if (filterIsArray) {\n      dispatch(deleteFilteredContact(id));\n    }\n    dispatch(deleteContacts(id));\n  };\n\n  return (\n    <>\n      {state.loader && <h2>Идет загрузка</h2>}\n      {state.error && <h2>Ошибка загрузки</h2>}\n\n      {search.length > 0 && (\n        <div className={s.contactListformat}>\n          <ul className={s.contactList}>\n            {search.map(({ id, name, number }) => (\n              <li key={id}>\n                {name}: {}\n                {number}\n                <button\n                  type=\"button\"\n                  className={s.contactItem__btn}\n                  onClick={() => handleDeleteContact(id)}>\n                  Удалить\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </>\n  );\n};\nexport default Contacts;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { filterContact } from '../../redux/reducer';\nimport { getVisibleContacts } from '../../redux/contacts-selectors';\nimport { forFilterState } from '../../redux/contacts-selectors';\n\nimport PropTypes from 'prop-types';\nimport s from './filter.module.css';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filterState = useSelector(state => forFilterState(state));\n\n  const handleChange = e => {\n    const { value } = e.target;\n    const filterCont = getVisibleContacts(filterState, value);\n    dispatch(filterContact(filterCont));\n  };\n\n  return (\n    <>\n      <h2>Contacts</h2>\n      <label className={s.findcontacts}>\n        Find contacts by name\n        <input\n          className={s.findInput}\n          type=\"text\"\n          name=\"filter\"\n          onChange={handleChange}\n        />\n      </label>\n    </>\n  );\n};\n\nexport default Filter;\nFilter.propTypes = {\n  value: PropTypes.string,\n  handleChange: PropTypes.func,\n};\n","import { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport Phonebook from './components/PhoneBook/phoneBook';\nimport Contacts from './components/Contacts/contacts';\nimport Filter from './components/Filter/filter';\nimport { getContacts } from './redux/actions';\nimport './App.css';\n\nexport default function App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Phonebook />\n      <Filter />\n      <Contacts />\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { store } from './redux/store';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport './index.css';\nimport 'normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}